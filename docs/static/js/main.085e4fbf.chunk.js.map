{"version":3,"sources":["components/addCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["Addcategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","popo","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","map","img","id","title","images","downsized_medium","Gifgriditem","className","src","alt","Gifgrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GiftExpertApp","categories","o","ReactDOM","render","document","getElementById"],"mappings":"8LAgCeA,EA7BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACAC,mBAAS,IADT,mBAC9BC,EAD8B,KAClBC,EADkB,KAcrC,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,MAAI,CAACP,MACvBC,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAST,EACTU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCNlBG,EAAQ,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAUH,GAD7C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAHY,kBAIbA,EAAKC,KAAI,SAAAC,GAAG,YAAK,CAACC,GAAID,EAAIC,GAAIC,MAAOF,EAAIE,MAAOT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,SAJrE,2CAAH,sDCWNY,EATK,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAC1B,OACI,yBAAKa,UAAU,QACX,yBAAKC,IAAMd,EAAMe,IAAKN,IACtB,2BAAKA,KCoBFO,EArBC,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAAc,ECDJ,SAACA,GAAc,IAAD,EACXd,mBAAS,CAChCqB,KAAM,GACNY,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNvB,EAASC,GACRuB,MAAK,SAAAC,GACFH,EAAS,CACLd,KAAKiB,EACLL,SAAS,SAGlB,CAACnB,IAEGoB,EDdmBK,CAAazB,GAA/BO,EADoB,EACpBA,KAAMY,EADc,EACdA,QAEd,OACI,6BACI,4BAAMnB,GACDmB,GAAW,sCACZ,yBAAKJ,UAAU,aAEPR,EAAKC,KAAI,SAAAC,GAAG,OACR,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEbvBkB,EAAgB,WAAM,IAAD,EAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAI9B,OACI,oCACI,6CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAE7B,6BACA,4BAEQ2C,EAAWpB,KAAI,SAACqB,GAAD,OACX,kBAAC,EAAD,CACIH,IAAKG,EACL7B,SAAU6B,U,MCdtCC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.085e4fbf.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Addcategory = ({setCategories}) => {\n    const [inputValue, setInputValue] =  useState('');\n    const handleInputChange = (e) =>{\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        if(inputValue.trim().length > 2 ){\n            setCategories(popo => [inputValue]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value = {inputValue}\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddcategory.propTypes = {\n    setCategories: PropTypes.func.isRequired \n}\n\nexport default Addcategory\n","export const getGifts = async(category) =>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=coTce64YBpENvcBhMIPxfkmTAeZLmTi0`;\n    const resp = await fetch(url);\n    const { data } = await resp.json(); \n    return data.map(img => ({id: img.id, title: img.title, url: img.images?.downsized_medium.url }))\n}","import React from 'react'\n\nconst Gifgriditem = ({ title, url}) => {\n    return (\n        <div className=\"card\">\n            <img src={ url } alt={title} />\n            <p>{ title }</p>\n        </div>\n    )\n}\n\nexport default Gifgriditem\n","import React, { useEffect, useState } from 'react'\nimport { getGifts } from '../helpers/getGifs';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport Gifgriditem from './GifGridItem';\n\nconst Gifgrid = ({category}) => {\n    const { data, loading } = useFetchGifs(category);\n    \n    return (\n        <div>\n            <h3>{ category }</h3> \n                {loading && <p>Loading</p>}\n                <div className=\"card-grid\">\n                    {\n                        data.map(img => (\n                            <Gifgriditem \n                                key={img.id}    \n                                {...img} \n                            />\n                        ))\n                    }\n                </div>\n        </div>\n    )\n}\n\nexport default Gifgrid\n","import { useEffect, useState } from \"react\"\nimport { getGifts } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = (category) =>Â {\n    const [state, setState] =  useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(()=>{\n        getGifts(category)\n        .then(imgs => {\n            setState({\n                data:imgs,\n                loading: false,\n            });\n        })\n    }, [category]);\n\n    return state;\n}","import React, { useState } from 'react';\nimport Addcategory from './components/addCategory';\nimport Gifgrid from './components/GifGrid';\n\nexport const GiftExpertApp = () =>{\n    \n    const [categories, setCategories] = useState(['One Punch']);\n    \n    return (\n        <>\n            <h2>GiftExpertApp</h2>\n            <Addcategory setCategories={ setCategories }/>\n            \n            <hr/>\n            <ol>\n                { \n                    categories.map((o) => (\n                        <Gifgrid \n                            key={o}\n                            category={o}\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}